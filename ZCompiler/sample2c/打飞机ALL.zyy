导入：TKT系统，TKT桌面控件，TKT绘图，TKT绘图/形状
使用：控制台，桌面定时器，音频播放器，颜色，绘图辅助，点辅助，图片辅助，笔刷库，线程辅助,随机数器

约定游戏状态：开始，暂停，结束
约定子弹类型：敌人子弹，玩家子弹

声明:
	敌群：敌人列表
	名称：文本
	坐标：整数
	X坐标：坐标
	Y坐标：坐标
	长度：整数
	高度：整数
	速度：整数
	X速度：速度
	Y速度：速度
	图像文件：文本
	计数器：整数
	等级：整数	

唯一类型：战场参数
战场参数属性：长度=534，高度=562，绘图器

动画窗体类型：战场
战场属性：游戏状态，玩家=飞机

战场（）：
	启动时窗口居中
	标题="飞机大战"
	设置尺寸(战场参数的长度,战场参数的高度)
	玩家=飞机()

战场初始化：
	播放音频("resource/shoot.wav")
	敌机管理器生成一群敌人

战场响应鼠标移动(鼠标位置)：
        玩家的X坐标 = 鼠标位置的X坐标;
        玩家的Y坐标 = 鼠标位置的Y坐标;

战场用(绘图器HTQ)绘图：
    战场参数的绘图器=HTQ;
    HTQ在(点(0,0))绘制(图片("resource/bg_02.jpg"));
    玩家显示;
    子弹管理器显示子弹
    敌机管理器显示敌人
    如果(状态==结束)
        在(点(长度/2-10,高度/2-10))显示提示文字("游戏结束")

战场更新：
	如果状态！=开始则结束
	检查碰撞
	子弹管理器移动子弹;
	玩家发射子弹;
	敌机管理器发射子弹;
	敌机管理器移动敌人;

战场检查碰撞：
    /*循环每一个(子弹管理器的子弹群,ZD)
        如果(ZD的类型==玩家子弹)
            循环每一个(敌机管理器的敌群,DJ)
                如果((ZD)碰撞到(DJ))*/

    循环每一个(子弹管理器的子弹群,ZD)
        如果(ZD的类型==敌人子弹)
            如果((ZD)碰撞到(玩家))
                状态=结束;
                打印(玩家的X坐标+","+玩家的Y坐标+"  "+ZD的类型+":"+ZD的X坐标+","+ZD的Y坐标);换行;

战场在(点D)显示提示文字(文本W)：
	战场参数的绘图器=>绘图器H;
	绘图器H的笔刷=红色笔刷;
	文本块K=文本块(字体类型：“仿宋体”, 字体大小：20, 位置：D,  内容:W);
	(绘图器H)绘制(文本块K);
	//(绘图器H)销毁;

/*
战场响应鼠标单击(鼠标参数E)：
      打印("响应鼠标单击");
*/

战场响应键盘(键盘参数J) ：
     如果(J的按键==空格键)
          状态=开始

启动：
	控件管理器初始化;
	打飞机=战场();
	启动窗体(打飞机);

唯一类型：敌机管理器

敌机管理器属性：敌群

敌机管理器发射子弹：
	敌群的每一个发射子弹

敌机管理器生成一个敌人(整数:X最小值,整数:X最大值)：
	ZD=敌人();
	生成随机数(X最小值,X最大值)=>X;
	生成随机数(0,战场参数的高度/2)=>Y;
	ZD的X坐标=X;
	ZD的Y坐标=Y;
	ZD的X速度=生成随机数(-4,4);
	ZD的Y速度=生成随机数(-4,4);
	(敌群)添加(ZD);

敌机管理器生成一群敌人：
	生成一个敌人(0,100);
	生成一个敌人(100,200);
	生成一个敌人(200,300);
	//生成一个敌人(300,400);
	//生成一个敌人(400,500);

过程:移动敌人
	LB = 敌人列表();
	循环每一个(敌群,ZD)
		如果((ZD)出界==否)
			(LB)添加(ZD);
	(敌群)清空;
	敌群=LB;
	循环每一个(敌群,ZD)
		(ZD)移动;

敌机管理器取得敌人数量：整数
	结果=敌群的个数

唯一类型：子弹管理器
子弹管理器属性：子弹群=子弹列表

子弹管理器加入(子弹Z)：
	子弹群添加Z;

子弹管理器删除(子弹Z)：
	子弹群删除Z

子弹管理器显示子弹：
	子弹群的每一个发射显示;

子弹管理器移动子弹：
	LB = 子弹列表();
	循环每一个(子弹群,ZD)
		如果((ZD)出界==否)
			(LB)添加(ZD);
	(子弹群)清空;
	子弹群=LB;
	循环每一个(子弹群,ZD)
		(ZD)移动;

子弹管理器取得子弹数量：整数
	结果=子弹群的个数;

类型：物体
物体属性：名称，X坐标，Y坐标，长度，高度，X速度，Y速度，图像文件

物体取得中心位置：点
	结果=点(X坐标+长度/2,Y坐标+高度/2)

物体显示：
	D=点(X坐标,Y坐标);
	战场参数的绘图器在D绘制图片(图像文件)

物体移动：
	X坐标=X坐标+X速度;
	Y坐标=Y坐标+Y速度;


物体出界：判断符
	结果=否;
    	如果(X坐标+长度<0)
        	结果=是;
        否则如果(X坐标>战场参数的长度)
             结果=是;
    	否则如果(Y坐标+高度<0)
        	结果=是;
    	否则如果(Y坐标>战场参数的高度)
        	结果=是;
    	否则
        	结果=否

物体碰撞到(物体W)：判断符
    A=矩形(长度,高度);
    A的左上角位置=点(X坐标,Y坐标);
    B=矩形(W的长度,W的高度);
    B的左上角位置=点(W的X坐标,W的Y坐标);
    结果=(A)相交于(B)

物体类型：子弹
子弹属性：子弹类型
子弹()：
	长度 = 11
	高度 = 21

物体类型：敌人
敌人属性：发射计数器=0
敌人（）：
	长度=40;
	高度=28;
	图像文件="resource\\DiJi.png"

敌人发射子弹：
    如果(发射计数器>25)
    	ZD =子弹();
    	ZD的X坐标=X坐标+20;
    	ZD的Y坐标=Y坐标+5;
    	ZD的图像文件="resource/grey_bullet.png";
        ZD的Y速度=4;
        ZD的类型=敌人子弹;
    	(子弹管理器)加入(ZD);
        发射计数器=0;
    否则
        发射计数器=发射计数器+1

敌人移动：
    X坐标=X坐标+X速度;
    Y坐标=Y坐标+Y速度;
    如果(出界)
        X速度=-X速度;
        Y速度=-Y速度;
        X坐标=X坐标+X速度;
        Y坐标=Y坐标+Y速度;

物体类型：飞机
飞机属性：发射计数器=0

飞机()：
	X坐标=150;
	Y坐标=100;
	长度=48;
	高度=48;
	图像文件="resource\\icon48x48.png"

飞机升级：
	等级=等级+1;

飞机发射子弹：
    如果(发射计数器>4)
    	ZD =子弹();
    	ZD的X坐标=X坐标+24;
    	ZD的Y坐标=Y坐标-24;
    	ZD的图像文件="resource/red_bullet.png";
        ZD的Y速度=-20;
        ZD的类型=玩家子弹;
    	(子弹管理器)加入(ZD);
    	//(音频播放器)播放音频("resource/shoot.wav");
        发射计数器=0;
    否则
        发射计数器=发射计数器+1;
